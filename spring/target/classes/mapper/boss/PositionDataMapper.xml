<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.david.hlp.Spring.boss.mapper.PositionDataMapper">
    <resultMap id="BaseResultMap" type="com.david.hlp.Spring.boss.entity.PositionData">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="parent_id" property="parentId" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, parent_id, code, name, type
    </sql>

    <insert id="insert" parameterType="com.david.hlp.Spring.boss.entity.PositionData" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO position_data (parent_id, code, name, type)
        VALUES (#{parentId, jdbcType=VARCHAR}, 
                #{code, jdbcType=VARCHAR}, 
                #{name, jdbcType=VARCHAR}, 
                #{type, jdbcType=VARCHAR})
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO position_data (parent_id, code, name, type)
        VALUES 
        <foreach collection="list" item="item" separator=",">
            (#{item.parentId, jdbcType=VARCHAR},
             #{item.code, jdbcType=VARCHAR},
             #{item.name, jdbcType=VARCHAR},
             #{item.type, jdbcType=VARCHAR})
        </foreach>
    </insert>

    <update id="updateById" parameterType="com.david.hlp.Spring.boss.entity.PositionData">
        UPDATE position_data
        <set>
            <if test="parentId != null">
                parent_id = #{parentId, jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code, jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name, jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type, jdbcType=VARCHAR},
            </if>
        </set>
        WHERE id = #{id, jdbcType=INTEGER}
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM position_data WHERE id = #{id, jdbcType=INTEGER}
    </delete>

    <delete id="batchDeleteByIds" parameterType="java.util.List">
        DELETE FROM position_data WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM position_data
        WHERE id = #{id, jdbcType=INTEGER}
    </select>

    <select id="getByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM position_data
        WHERE code = #{code, jdbcType=VARCHAR}
    </select>

    <select id="listAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM position_data
    </select>

    <select id="listByType" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM position_data
        WHERE type = #{type, jdbcType=VARCHAR}
    </select>

    <select id="listByParentId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM position_data
        WHERE parent_id = #{parentId, jdbcType=VARCHAR}
    </select>
</mapper>
